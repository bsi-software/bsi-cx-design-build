{"version":3,"file":"bundle.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;ACVA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACe;AACf;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,GAAG;AACjB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG,GAAG;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,8BAA8B,KAAK;AACnC;AACA,yBAAyB,MAAM,UAAU,sBAAsB;AAC/D;AACA;AACA,yBAAyB,MAAM;AAC/B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1RA,yDAAe;AACf;AACA,CAAC,EAAC;;;ACFa;AACf;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,qCAAqC,eAAe;AACpD;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ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Aa,QAAQ;AACrB,eAAe;AACf;AACA;AACA,yBAAyB,0EAAY,mBAAmB,wEAAQ;AAChE;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,YAAY,SAAS;AACrB;;;ACzCoC;;AAES;;AAEC;;AAE/B;AACf;AACA,YAAY;AACZ;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,2BAA2B,iBAAiB;AAC5C;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,eAAe,gFAAU;AACzB;AACA;AACA;AACA,0DAA0D,KAAK;;AAE/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wHAAkD;AACnE,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;AC7DoB;AACI;;AAEmB;AACgB;AACd;AACI;;AAEQ;AACgB;AACvC;AACuC;AAChC;;;AAG1B;AACf;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,eAAe;AACf;AACA;AACA,WAAW,0EAAY;AACvB;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0EAAY;AAC5B;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,uBAAuB,0EAAY,0BAA0B,KAAK;AAClE,sBAAsB,0EAAY,0BAA0B,KAAK;AACjE,iBAAiB,qEAAa;AAC9B;AACA;AACA;AACA,mBAAmB,KAAK,GAAG,UAAU;AACrC;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,0EAAY;AAC5B;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,qCAAqC,eAAe;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,gBAAgB,uJAA2B;AAC3C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,UAAU,gJAAoB;AAC9B;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,UAAU,gIAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,UAAU,4HAAS;AACnB,kBAAkB,iBAAiB;AACnC;AACA,OAAO;AACP;;AAEA;AACA;AACA,YAAY,4HAAS;AACrB,oBAAoB,iBAAiB;AACrC,SAAS;AACT;AACA;;AAEA;AACA,UAAU,yBAAyB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,0EAAY;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,UAAU,wIAAY;AACtB;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,mBAAmB;AAClE;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;;;AC7iB6C;AACmB;AACH;AACgB;;AAO3E","sources":["webpack://@bsi-cx/design-build/webpack/universalModuleDefinition","webpack://@bsi-cx/design-build/external {\"root\":\"copy-webpack-plugin\",\"commonjs\":\"copy-webpack-plugin\",\"commonjs2\":\"copy-webpack-plugin\",\"amd\":\"copy-webpack-plugin\"}","webpack://@bsi-cx/design-build/external {\"root\":\"crypto\",\"commonjs\":\"crypto\",\"commonjs2\":\"crypto\",\"amd\":\"crypto\"}","webpack://@bsi-cx/design-build/external {\"root\":\"fs\",\"commonjs\":\"fs\",\"commonjs2\":\"fs\",\"amd\":\"fs\"}","webpack://@bsi-cx/design-build/external {\"root\":\"handlebars\",\"commonjs\":\"handlebars\",\"commonjs2\":\"handlebars\",\"amd\":\"handlebars\"}","webpack://@bsi-cx/design-build/external {\"root\":\"mini-css-extract-plugin\",\"commonjs\":\"mini-css-extract-plugin\",\"commonjs2\":\"mini-css-extract-plugin\",\"amd\":\"mini-css-extract-plugin\"}","webpack://@bsi-cx/design-build/external {\"root\":\"path\",\"commonjs\":\"path\",\"commonjs2\":\"path\",\"amd\":\"path\"}","webpack://@bsi-cx/design-build/external {\"root\":\"terser-webpack-plugin\",\"commonjs\":\"terser-webpack-plugin\",\"commonjs2\":\"terser-webpack-plugin\",\"amd\":\"terser-webpack-plugin\"}","webpack://@bsi-cx/design-build/external {\"root\":\"vm\",\"commonjs\":\"vm\",\"commonjs2\":\"vm\",\"amd\":\"vm\"}","webpack://@bsi-cx/design-build/external {\"root\":\"webpack\",\"commonjs\":\"webpack\",\"commonjs2\":\"webpack\",\"amd\":\"webpack\"}","webpack://@bsi-cx/design-build/external {\"root\":\"zip-webpack-plugin\",\"commonjs\":\"zip-webpack-plugin\",\"commonjs2\":\"zip-webpack-plugin\",\"amd\":\"zip-webpack-plugin\"}","webpack://@bsi-cx/design-build/webpack/bootstrap","webpack://@bsi-cx/design-build/webpack/runtime/compat get default export","webpack://@bsi-cx/design-build/webpack/runtime/define property getters","webpack://@bsi-cx/design-build/webpack/runtime/hasOwnProperty shorthand","webpack://@bsi-cx/design-build/webpack/runtime/make namespace object","webpack://@bsi-cx/design-build/./src/build-config.js","webpack://@bsi-cx/design-build/./src/handlebars-helpers.js","webpack://@bsi-cx/design-build/./src/constant.js","webpack://@bsi-cx/design-build/./src/bsi-cx-webpack-plugin.js","webpack://@bsi-cx/design-build/./src/utility.js","webpack://@bsi-cx/design-build/./src/bsi-cx-webpack-zip-hash-plugin.js","webpack://@bsi-cx/design-build/./src/webpack-config-builder.js","webpack://@bsi-cx/design-build/./index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"), require(\"path\"), require(\"zip-webpack-plugin\"), require(\"mini-css-extract-plugin\"), require(\"copy-webpack-plugin\"), require(\"terser-webpack-plugin\"), require(\"crypto\"), require(\"vm\"), require(\"handlebars\"), require(\"webpack\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fs\", \"path\", \"zip-webpack-plugin\", \"mini-css-extract-plugin\", \"copy-webpack-plugin\", \"terser-webpack-plugin\", \"crypto\", \"vm\", \"handlebars\", \"webpack\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"fs\"), require(\"path\"), require(\"zip-webpack-plugin\"), require(\"mini-css-extract-plugin\"), require(\"copy-webpack-plugin\"), require(\"terser-webpack-plugin\"), require(\"crypto\"), require(\"vm\"), require(\"handlebars\"), require(\"webpack\")) : factory(root[\"fs\"], root[\"path\"], root[\"zip-webpack-plugin\"], root[\"mini-css-extract-plugin\"], root[\"copy-webpack-plugin\"], root[\"terser-webpack-plugin\"], root[\"crypto\"], root[\"vm\"], root[\"handlebars\"], root[\"webpack\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function(__WEBPACK_EXTERNAL_MODULE__790__, __WEBPACK_EXTERNAL_MODULE__281__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__68__, __WEBPACK_EXTERNAL_MODULE__432__, __WEBPACK_EXTERNAL_MODULE__239__, __WEBPACK_EXTERNAL_MODULE__703__, __WEBPACK_EXTERNAL_MODULE__714__, __WEBPACK_EXTERNAL_MODULE__350__, __WEBPACK_EXTERNAL_MODULE__373__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__432__;","module.exports = __WEBPACK_EXTERNAL_MODULE__703__;","module.exports = __WEBPACK_EXTERNAL_MODULE__790__;","module.exports = __WEBPACK_EXTERNAL_MODULE__350__;","module.exports = __WEBPACK_EXTERNAL_MODULE__68__;","module.exports = __WEBPACK_EXTERNAL_MODULE__281__;","module.exports = __WEBPACK_EXTERNAL_MODULE__239__;","module.exports = __WEBPACK_EXTERNAL_MODULE__714__;","module.exports = __WEBPACK_EXTERNAL_MODULE__373__;","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * The configuration object for the build of one template.\n */\nexport default class BuildConfig {\n  constructor() {\n    /**\n     * @type {string}\n     */\n    this._name = undefined;\n    /**\n     * @type {string}\n     */\n    this._version = '1.0.0';\n    /**\n     * @type {string}\n     */\n    this._rootPath = undefined;\n    /**\n     * @type {string}\n     */\n    this._outputPath = undefined;\n    /**\n     * @type {{}}\n     */\n    this._properties = {};\n    /**\n     * @type {number}\n     */\n    this._devServerPort = 9000;\n    /**\n     * @type {boolean}\n     */\n    this._hashZipFiles = true;\n    /**\n     * @type {{}}\n     */\n    this._modules = {};\n    /**\n     * @type {[{}]}\n     */\n    this._additionalFilesToCopy = [];\n    /**\n     * @type {boolean}\n     */\n    this._sourceMapEnabled = true;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get version() {\n    return this._version;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get rootPath() {\n    return this._rootPath;\n  }\n\n  /**\n   * @returns {string|undefined}\n   */\n  get outputPath() {\n    return this._outputPath;\n  }\n\n  /**\n   * @returns {{}}\n   */\n  get properties() {\n    return this._properties;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get devServerPort() {\n    return this._devServerPort;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get hashZipFiles() {\n    return this._hashZipFiles;\n  }\n\n  /**\n   * @returns {{}}\n   */\n  get modules() {\n    return this._modules;\n  }\n\n  /**\n   * @returns {[{}]}\n   */\n  get additionalFilesToCopy() {\n    return this._additionalFilesToCopy;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get sourceMapEnabled() {\n    return this._sourceMapEnabled;\n  }\n\n  /**\n   * The name of this template, e.g. landingpage. This will be included in the name of the resulting ZIP file in the dist folder.\n   * \n   * @param {string} name \n   * @returns {BuildConfig}\n   */\n  withName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * The version of this template, e.g. 1.0.1. This will be included in the name of the resulting ZIP file in the dist folder.\n   * \n   * @param {string} version \n   * @returns {BuildConfig}\n   */\n  withVersion(version) {\n    this._version = version;\n    return this;\n  }\n\n  /**\n   * The path to the root folder of this template. This folder contains the source code of your template.\n   * \n   * @param {string} rootPath \n   * @returns {BuildConfig}\n   */\n  withRootPath(rootPath) {\n    this._rootPath = rootPath;\n    return this;\n  }\n\n  /**\n   * A custom output path to use. Default: dist/{name}.\n   * \n   * @param {string} outputPath \n   * @returns {BuildConfig}\n   */\n  withOutputPath(outputPath) {\n    this._outputPath = outputPath;\n    return this;\n  }\n\n  /**\n   * The data properties for your Twig templates. This object will be available as \"properties\" variable inside your Twig templates.\n   * \n   * @param {{}} properties \n   * @returns {BuildConfig}\n   */\n  withProperties(properties) {\n    this._properties = properties;\n    return this;\n  }\n\n  /**\n   * A TCP port number to use for the development server. The default port is 9000. Be aware, that you don't have to configure a seperate port for each template.\n   * \n   * @param {number} devServerPort \n   * @returns {BuildConfig}\n   */\n  withDevServerPort(devServerPort) {\n    this._devServerPort = devServerPort;\n    return this;\n  }\n\n  /**\n   * Add a unique hash value to the name of the resulting ZIP file.\n   * \n   * @param {boolean} hashZipFiles \n   * @returns {BuildConfig}\n   */\n  withHashZipFiles(hashZipFiles) {\n    this._hashZipFiles = !!hashZipFiles;\n    return this;\n  }\n\n  /**\n   * Add additional Java Script modules.\n   * \n   * @param {{}} modules \n   * @returns {BuildConfig}\n   */\n  withModules(modules) {\n    this._modules = modules;\n    return this;\n  }\n\n  /**\n   * Add one additional Java Script module.\n   * \n   * @param {string} name \n   * @param {string} path \n   * @returns {BuildConfig}\n   */\n  withModule(name, path) {\n    this._modules[name] = path;\n    return this;\n  }\n\n  /**\n   * Add additional files to copy to the output folder.\n   * \n   * @param {[{}]} additionalFilesToCopy \n   * @returns {BuildConfig}\n   */\n  withAdditionalFilesToCopy(additionalFilesToCopy) {\n    this._additionalFilesToCopy = additionalFilesToCopy;\n    return this;\n  }\n\n  /**\n   * Add a single configuration for additional files to copy to the output folder.\n   * \n   * @param {{}} additionalFileToCopy \n   * @returns {BuildConfig}\n   */\n  withAdditionalFileToCopy(additionalFileToCopy) {\n    this._additionalFilesToCopy.push(additionalFileToCopy);\n    return this;\n  }\n\n  /**\n   * Enable or disable source maps.\n   * \n   * @param {boolean} sourceMapEnabled \n   * @returns {BuildConfig}\n   */\n  withSourceMapEnabled(sourceMapEnabled) {\n    this._sourceMapEnabled = sourceMapEnabled;\n    return this;\n  }\n\n  /**\n   * @returns {BuildConfig}\n   */\n  validate() {\n    this._checkInstanceofAndRequired('name', String, true);\n    this._checkInstanceofAndRequired('version', String, true);\n    this._checkInstanceofAndRequired('rootPath', String, true);\n    this._checkInstanceofAndRequired('outputPath', String, false);\n    this._checkInstanceofAndRequired('properties', Object, false);\n    this._checkInstanceofAndRequired('devServerPort', Number, false);\n    this._checkInstanceofAndRequired('hashZipFiles', Boolean, false);\n    this._checkInstanceofAndRequired('modules', Object, false);\n    this._checkInstanceofAndRequired('additionalFilesToCopy', Array, false);\n    this._checkInstanceofAndRequired('sourceMapEnabled', Boolean, false);\n\n    return this;\n  }\n\n  /**\n   * @param {string} name \n   * @param {object} type \n   * @param {boolean} required \n   */\n  _checkInstanceofAndRequired(name, type, required) {\n    const property = this[`_${name}`];\n    if (property !== undefined && !property instanceof type) {\n      throw new Error(`${name} must be ${type.constructor.name}`);\n    }\n    if (required && !property) {\n      throw new Error(`${name} is required and can not be empty`);\n    }\n  }\n}\n","export default {\n  'bsi.nls': key => key\n};\n","export default class Constant {\n  /**\n   * @type {string}\n   */\n  static BSI_CX_CSS_HREF = '###BSI_CX_CSS_HREF###';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_CSS_INLINE = '###BSI_CX_CSS_INLINE###';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_DESIGN_BASE_URL = '{{designBaseUrl}}';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_MODULE_RUNTIME_PATH = 'modules/runtime';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_MODULE_RUNTIME_HREF = '###BSI_CX_MODULE_RUNTIME_HREF###';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_MODULE_RUNTIME_INLINE = '###BSI_CX_MODULE_RUNTIME_INLINE###';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_JS_MODULE_START = '###BSI_CX_JS_MODULE_START###';\n  /**\n   * @type {string}\n   */\n  static BSI_CX_JS_MODULE_END = '###BSI_CX_JS_MODULE_END###';\n};\n","import path from 'path';\nimport { createHash } from 'crypto';\nimport vm from 'vm';\n\nimport Handlebars from 'handlebars';\nimport { Compilation, sources, Compiler, WebpackLogger, WebpackError } from 'webpack';\n\nimport handlebarsHelpers from './handlebars-helpers';\nimport Constant from './constant';\n\nclass _BsiCxWebpackPlugin {\n  /**\n   * @type {RegExp}\n   */\n  static DESIGN_JSON = /^design\\.json$/;\n  /**\n   * @type {RegExp}\n   */\n  static DESIGN_HTML = /^design\\.(html|hbs)$/;\n  /**\n   * @type {RegExp}\n   */\n  static PREVIEW_HTML = /^preview\\.(html|hbs)$/;\n\n  /**\n   * @type {RegExp}\n   */\n  static STYLES_CSS = /^static\\/styles\\-[0-9a-z]+\\.css$/;\n  /**\n   * @type {RegExp}\n   */\n  static CSS_INLINE = new RegExp(Constant.BSI_CX_CSS_INLINE, 'g');\n  /**\n   * @type {RegExp}\n   */\n  static CSS_HREF = new RegExp(Constant.BSI_CX_CSS_HREF, 'g');\n\n  /**\n   * @type {RegExp}\n   */\n  static JS_MODULE = new RegExp(`${Constant.BSI_CX_JS_MODULE_START}(?<metaInfo>.+)${Constant.BSI_CX_JS_MODULE_END}`, 'g');\n  /**\n   * @type {RegExp}\n   */\n  static JS_MODULE_RUNTIME_HREF = new RegExp(Constant.BSI_CX_MODULE_RUNTIME_HREF, 'g');\n  /**\n   * @type {RegExp}\n   */\n  static JS_MODULE_RUNTIME_INLINE = new RegExp(Constant.BSI_CX_MODULE_RUNTIME_INLINE, 'g');\n  /**\n   * @type {RegExp}\n   */\n  static JS_MODULE_RUNTIME = new RegExp(`^${Constant.BSI_CX_MODULE_RUNTIME_PATH}\\.js$`);\n\n  /**\n   * @type {number}\n   */\n  static ELEMENT_FILE_HASH_LENGTH = 20;\n\n  /**\n   * @param {Compiler} compiler \n   * @param {Compilation} compilation \n   * @param {WebpackLogger} logger \n   */\n  constructor(compiler, compilation, logger) {\n    /**\n     * @type {Compiler}\n     */\n    this._compiler = compiler;\n    /**\n     * @type {Compilation}\n     */\n    this._compilation = compilation;\n    /**\n     * @type {WebpackLogger}\n     */\n    this._logger = logger;\n  }\n\n  apply() {\n    try {\n      this._handleDesignJson();\n      this._exportDesignHtml();\n      this._exportPreviewHtml();\n    } catch (error) {\n      if (error instanceof WebpackError) {\n        this._compilation.errors.push(error);\n      } else {\n        this._logger.error(error);\n      }\n    }\n  }\n\n  _exportDesignHtml() {\n    let designHtmlPath = this._getAssetName(_BsiCxWebpackPlugin.DESIGN_HTML);\n    this._updateHtmlTemplate(designHtmlPath, 'design');\n  }\n\n  _exportPreviewHtml() {\n    let previewFilePath = this._getAssetName(_BsiCxWebpackPlugin.PREVIEW_HTML);\n    let previewTemplate = this._updateHtmlTemplate(previewFilePath, 'preview');\n\n    if (/\\.hbs$/.test(previewFilePath)) {\n      this._handlePreviewHandlebars(previewFilePath, previewTemplate);\n    }\n  }\n\n  _handleDesignJson() {\n    let designJsonPath = this._getAssetName(_BsiCxWebpackPlugin.DESIGN_JSON);\n    let designJsonObj = this._loadAsset(designJsonPath, 'json');\n    let contentElementGroups = designJsonObj.contentElementGroups || [];\n    let website = designJsonObj.website || { includes: {} };\n    let websiteIncludes = website.includes || {};\n\n    this._handleDesignPreviewImage(designJsonObj);\n\n    contentElementGroups\n      .forEach(group => group.contentElements\n        .forEach(element => this._handleElement(element)));\n\n    Object.values(websiteIncludes)\n      .forEach(include => this._handleInclude(include));\n\n    let jsonStr = JSON.stringify(designJsonObj, null, 4);\n    this._updateAsset(designJsonPath, jsonStr);\n  }\n\n  _handleDesignPreviewImage(designJsonObj) {\n    if (typeof designJsonObj.previewImage !== 'undefined') {\n      designJsonObj.previewImage = this._removeDesignBaseUrl(designJsonObj.previewImage);\n    }\n  }\n\n  _handleElement(element) {\n    element.file = this._handleTemplateFile(element.file, 'contentElements');\n  }\n\n  _handleInclude(include) {\n    include.file = this._handleTemplateFile(include.file, 'includes');\n  }\n\n  /**\n   * @param {{content:string,path:string}} fileObj\n   * @param {string} baseFolder\n   * @returns {string}\n   */\n  _handleTemplateFile(fileObj, baseFolder) {\n    let rawContent = fileObj.content;\n    let content = /^module\\.exports/.test(rawContent) ? this._eval(rawContent) : rawContent;\n    let originalExtension = path.extname(fileObj.path);\n    let fileName = path.basename(fileObj.path, originalExtension).replace(/\\.(hbs)$/, '');\n    let contentHash = this._createContentHash(content);\n    let extension = this._getTemplateFileExtension(fileObj.path);\n    let elementFilePath = `${baseFolder}${path.posix.sep}${fileName}-${contentHash}.${extension}`;\n\n    this._emitAsset(elementFilePath, content);\n\n    return elementFilePath;\n  }\n\n  /**\n   * @param {string} previewFilePath \n   * @param {string} previewTemplate \n   */\n  _handlePreviewHandlebars(previewFilePath, previewTemplate) {\n    let parser = this._getHandlebarsParser();\n    let template = parser.compile(previewTemplate);\n    let rendered = template({\n      designBaseUrl: '.',\n      bsi: this._getHandlebarsHelpers()\n    });\n    let previewHtmlPath = previewFilePath.replace(/\\.hbs$/, '.html');\n\n    this._emitAsset(previewHtmlPath, rendered);\n    this._deleteAsset(previewFilePath);\n  }\n\n  /**\n   * @param {string} fileName\n   * @returns {string}\n   */\n  _getTemplateFileExtension(fileName) {\n    if (/\\.hbs\\.twig$/.test(fileName)) {\n      return 'hbs';\n    }\n    if (/\\.hbs$/.test(fileName)) {\n      return 'hbs';\n    }\n    return 'html';\n  }\n\n  /**\n   * @param {RegExp} nameRegEx \n   * @returns {string[]}\n   */\n  _getAssetNames(nameRegEx) {\n    return Object.keys(this._compilation.assets)\n      .filter(name => nameRegEx.test(name));\n  }\n\n  /**\n   * @param {RegExp} nameRegEx \n   * @returns {string}\n   */\n  _getAssetName(nameRegEx) {\n    return this._getAssetNames(nameRegEx).shift();\n  }\n\n  _eval(source) {\n    let script = new vm.Script(source);\n    let context = { module: {} };\n    script.runInNewContext(context);\n    return context.module.exports;\n  }\n\n  /**\n   * @param {string} name \n   * @param {string} content \n   */\n  _updateAsset(filePath, content) {\n    let source = new sources.RawSource(content);\n    this._compilation.updateAsset(filePath, source);\n  }\n\n  /**\n   * @param {string} name \n   * @param {string} scope \n   * @returns {*}\n   */\n  _loadAsset(name, scope) {\n    let asset = this._compilation.getAsset(name);\n    let script = new vm.Script(asset.source.source());\n    let context = { self: {} };\n\n    script.runInNewContext(context);\n\n    return context[scope];\n  }\n\n  /**\n   * @param {string} filePath \n   * @param {string} source \n   */\n  _emitAsset(filePath, content) {\n    let source = new sources.RawSource(content);\n    this._compilation.emitAsset(filePath, source);\n  }\n\n  /**\n   * @param {string} filePath \n   */\n  _deleteAsset(filePath) {\n    this._compilation.deleteAsset(filePath);\n  }\n\n  /**\n   * @param {string} filePath \n   * @param {string} name\n   * @returns {string}\n   */\n  _updateHtmlTemplate(filePath, name) {\n    let templateObj = this._loadAsset(filePath, name);\n    let templateStr = this._eval(templateObj.content);\n\n    templateStr = templateStr.trim();\n    templateStr = this._handleStylesheets(templateStr);\n    templateStr = this._handleJavaScriptModules(templateStr);\n\n    this._updateAsset(filePath, templateStr);\n\n    return templateStr;\n  }\n\n  /**\n   * @param {string} content \n   * @returns {string}\n   */\n  _handleStylesheets(content) {\n    let publicPath = this._compiler.options.output.publicPath.replace(/\\/$/, '');\n    let cssStylesFilename = this._getAssetName(_BsiCxWebpackPlugin.STYLES_CSS);\n\n    if (cssStylesFilename === undefined) {\n      return content;\n    }\n\n    let linkStyleUrl = publicPath.length > 0 ? `${publicPath}/${cssStylesFilename}` : `./${cssStylesFilename}`;\n    let inlineSourceAssetsUrl = publicPath.length > 0 ? `${publicPath}/static/` : './static/';\n    let asset = this._compilation.getAsset(cssStylesFilename);\n    let source = asset.source.source()\n      .trim()\n      .replace(/\\n/g, '')\n      .replace(/\\.\\.\\/static\\//g, inlineSourceAssetsUrl);\n\n    content = content.replace(_BsiCxWebpackPlugin.CSS_INLINE, source);\n    content = content.replace(_BsiCxWebpackPlugin.CSS_HREF, linkStyleUrl);\n\n    return content;\n  }\n\n  /**\n   * @param {string} content \n   * @returns {string}\n   */\n  _handleJavaScriptModules(content) {\n    let jsModuleMatches = content.matchAll(_BsiCxWebpackPlugin.JS_MODULE);\n    let importedModules = [];\n\n    for (const match of jsModuleMatches) {\n      content = this._handleFoundJavaScriptModule(content, match, importedModules);\n    }\n\n    content = this._injectModuleRuntime(content);\n\n    return content;\n  }\n\n  _injectModuleRuntime(content) {\n    let publicPath = this._compiler.options.output.publicPath.replace(/\\/$/, '');\n    let filename = this._getAssetName(_BsiCxWebpackPlugin.JS_MODULE_RUNTIME);\n\n    if (filename === undefined) {\n      return content;\n    }\n\n    let url = publicPath.length > 0 ? `${publicPath}/${filename}` : `./${filename}`;\n    let asset = this._compilation.getAsset(filename);\n    let source = asset.source.source()\n      .trim()\n      .replace(/\\n/g, '');\n\n    content = content.replace(_BsiCxWebpackPlugin.JS_MODULE_RUNTIME_INLINE, source);\n    content = content.replace(_BsiCxWebpackPlugin.JS_MODULE_RUNTIME_HREF, url);\n\n    return content;\n  }\n\n  /**\n   * @param {string} content \n   * @param {RegExpMatchArray} match \n   * @param {string[]} importedModules\n   * @returns {string}\n   */\n  _handleFoundJavaScriptModule(content, match, importedModules) {\n    /**\n     * @type {{template:string,module:string,chunks:boolean|undefined,attributes:{}|undefined,inline:boolean}}\n     */\n    let metaInfo = JSON.parse(match.groups.metaInfo);\n    let strToReplace = match[0];\n    let replacement = '';\n\n    if (typeof metaInfo.module !== 'undefined') {\n      replacement = this._handleFoundJavaScriptModuleImport(metaInfo, importedModules);\n    } else if (typeof metaInfo.chunks !== 'undefined') {\n      replacement = this._handleFoundJavaScriptModuleChunks(metaInfo, importedModules);\n    }\n\n    return content.replace(strToReplace, replacement);\n  }\n\n  /**\n   * @param {{template:string,module:string,chunks:boolean|undefined,attributes:{}|undefined,inline:boolean}} metaInfo\n   * @param {string[]} importedModules\n   * @returns {string}\n   */\n  _handleFoundJavaScriptModuleImport(metaInfo, importedModules) {\n    let module = metaInfo.module;\n    let inline = metaInfo.inline;\n    let moduleAssetRegex = new RegExp(`^modules\\/${module}\\-[0-9a-z]+\\.js$`);\n    let moduleAssetPath = this._getAssetName(moduleAssetRegex);\n\n    if (!moduleAssetPath) {\n      throw this._webpackError(\n        `Module \"${module}\" does not exist.`,\n        `The module \"${module}\" does not exist. You need to include it in your modules configuration.`,\n        metaInfo.template\n      );\n    }\n\n    let replacement = '';\n\n    if (inline) {\n      let asset = this._compilation.getAsset(moduleAssetPath);\n      replacement = asset.source();\n    } else {\n      replacement = Constant.BSI_CX_DESIGN_BASE_URL + '/' + moduleAssetPath;\n    }\n\n    importedModules.push(moduleAssetPath);\n\n    return replacement;\n  }\n\n  /**\n   * @param {{template:string,module:string,chunks:boolean|undefined,attributes:{}|undefined,inline:boolean}} metaInfo\n   * @param {string[]} importedModules\n   * @returns {string}\n   */\n  _handleFoundJavaScriptModuleChunks(metaInfo, importedModules) {\n    let inline = metaInfo.inline;\n    let assetRegex = new RegExp(`^(modules|vendors)\\/.*\\.js$`);\n    let assetPaths = this._getAssetNames(assetRegex);\n\n    let replacement = assetPaths\n      .filter(assetPath => !assetPath.startsWith(Constant.BSI_CX_MODULE_RUNTIME_PATH) && importedModules.indexOf(assetPath) === -1)\n      .map(assetPath => {\n        importedModules.push(assetPath);\n\n        if (inline) {\n          let asset = this._compilation.getAsset(assetPath);\n          return `<script>${asset.source()}</script>`;\n        } else {\n          let url = Constant.BSI_CX_DESIGN_BASE_URL + '/' + assetPath;\n          return `<script src=\"${url}\" defer=\"defer\"></script>`;\n        }\n      }).join('');\n\n    return replacement;\n  }\n\n  /**\n   * @param {string} message \n   * @param {string} details \n   * @param {string|undefined} [location=undefined]\n   * @returns \n   */\n  _webpackError(message, details, location) {\n    let error = new WebpackError(message);\n    error.details = details;\n    if (!!location) {\n      error.loc = {\n        name: this._getContextRelativePath(location)\n      };\n    }\n    return error;\n  }\n\n  _getContextRelativePath(absolutePath) {\n    let contextPath = this._compiler.context;\n    let relativePath = path.relative(contextPath, absolutePath).replace(/\\\\/g, path.posix.sep);\n    return '.' + path.posix.sep + relativePath;\n  }\n\n  /**\n   * @param {string} content \n   * @returns {string}\n   */\n  _createContentHash(content) {\n    return createHash('sha256')\n      .update(content)\n      .digest('hex')\n      .substr(0, _BsiCxWebpackPlugin.ELEMENT_FILE_HASH_LENGTH);\n  }\n\n  /**\n   * @returns {Handlebars}\n   */\n  _getHandlebarsParser() {\n    return Handlebars.create();\n  }\n\n  /**\n   * @returns {{}} \n   */\n  _getHandlebarsHelpers() {\n    let helpersObj = {};\n    for (const [name, func] of Object.entries(handlebarsHelpers)) {\n      let fixedName = name.replace(/^bsi\\./, '');\n      helpersObj[fixedName] = func;\n    }\n    return helpersObj;\n  }\n\n  /**\n   * @param {string} url \n   * @returns {string}\n   */\n  _removeDesignBaseUrl(url) {\n    return url.replace(`${Constant.BSI_CX_DESIGN_BASE_URL}/`, '');\n  }\n}\n\nexport default class BsiCxWebpackPlugin {\n  /**\n   * @type {string}\n   */\n  static PLUGIN_NAME = 'BsiCxWebpackPlugin';\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(BsiCxWebpackPlugin.PLUGIN_NAME, compilation => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: BsiCxWebpackPlugin.PLUGIN_NAME,\n          stage: Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE\n        },\n        () => {\n          const logger = compilation.getLogger(BsiCxWebpackPlugin.PLUGIN_NAME);\n          new _BsiCxWebpackPlugin(compiler, compilation, logger).apply();\n        })\n    });\n  }\n};\n","import path from 'path';\n\n\nexport class StaticJavaScriptCondition {\n  /**\n   * @type {RegExp}\n   */\n  static FILE_EXTENSION = /\\.js/i;\n\n  /**\n   * @param {string} root \n   * @param {string} file \n   * @returns {boolean}\n   */\n  static isInsideStaticFolder(root, file) {\n    let staticFilePath = path.resolve(root, 'static') + path.sep;\n    return file.startsWith(staticFilePath);\n  }\n\n  /**\n   * @param {string} root \n   * @param {string} file \n   * @returns {boolean}\n   */\n  static test(root, file) {\n    return StaticJavaScriptCondition.isInsideStaticFolder(root, file)\n      && StaticJavaScriptCondition.FILE_EXTENSION.test(file);\n  }\n}\n\n/**\n * \n * @param {string} name \n * @param {string} version \n * @param {string} [suffix='']\n */\nexport function getZipArchiveName(name, version, suffix) {\n  let filename = [name, version, suffix]\n    .filter(value => !!value)\n    .join('-');\n  return `${filename}.zip`;\n}\n","import { createHash } from 'crypto';\n\nimport { Compilation, Asset } from 'webpack';\n\nimport { getZipArchiveName } from './utility';\n\nexport default class BsiCxWebpackZipHashPlugin {\n  /**\n   * @type {string}\n   */\n  static PLUGIN_NAME = 'BsiCxWebpackZipHashPlugin';\n\n  /**\n   * @param {string} name \n   * @param {string} version \n   * @param {boolean} enabled \n   */\n  constructor(name, version, enabled) {\n    this._name = name;\n    this._version = version;\n    this._enabled = !!enabled;\n    this._prodZipFileName = getZipArchiveName(name, version);\n    this._devZipFileName = getZipArchiveName(name, version, 'dev');\n  }\n\n  /**\n   * @param {Compilation} compilation\n   * @param {Asset} asset \n   */\n  _handleZipAsset(compilation, asset) {\n    let oldAssetName = asset.name;\n    let source = asset.source;\n    let hash = createHash('sha256')\n      .update(source.source())\n      .digest('hex')\n      .substr(0, 5);\n    let newAssetName = oldAssetName.replace(/\\.zip$/, `-${hash}.zip`);\n\n    compilation.deleteAsset(oldAssetName);\n    compilation.emitAsset(newAssetName, source);\n  }\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(BsiCxWebpackZipHashPlugin.PLUGIN_NAME, compilation => {\n      compilation.hooks.processAssets.tap(\n        {\n          name: BsiCxWebpackZipHashPlugin.PLUGIN_NAME,\n          stage: Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER\n        },\n        () => {\n          if (!this._enabled) {\n            return;\n          }\n\n          Object.keys(compilation.assets)\n            .filter(name => name === this._prodZipFileName || name === this._devZipFileName)\n            .map(name => compilation.getAsset(name))\n            .forEach(asset => this._handleZipAsset(compilation, asset));\n        })\n    });\n  }\n};\n","import fs from 'fs';\nimport path from 'path';\n\nimport ZipPlugin from 'zip-webpack-plugin';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport CopyPlugin from 'copy-webpack-plugin';\nimport TerserPlugin from 'terser-webpack-plugin';\n\nimport BsiCxWebpackPlugin from './bsi-cx-webpack-plugin';\nimport BsiCxWebpackZipHashPlugin from './bsi-cx-webpack-zip-hash-plugin';\nimport Constant from './constant';\nimport { getZipArchiveName, StaticJavaScriptCondition } from './utility';\nimport BuildConfig from './build-config';\n\n\nexport default class WebpackConfigBuilder {\n  /**\n   * @param {BuildConfig} config \n   */\n  constructor(config) {\n    this._config = config;\n  }\n\n  /**\n   * @returns {BuildConfig}\n   */\n  get config() {\n    return this._config;\n  }\n\n  build() {\n    return {\n      entry: this._getEntryConfig(),\n      name: this.config.name,\n      context: this.config.rootPath,\n      target: 'web',\n      module: {\n        rules: [\n          ...this._getTwigRuleConfig(),\n          ...this._getHtmlAndHbsRuleConfig(),\n          ...this._getStyleRulesConfig(),\n          ...this._getStaticAssetsRuleConfig(),\n          ...this._getStaticJavaScriptFileRuleConfig(),\n          ...this._getRegularJavaScriptFileRuleConfig()\n        ]\n      },\n      plugins: [\n        ...this._getMiniCssExtractPluginConfig(),\n        ...this._getCopyPluginConfig(),\n        ...this._getBsiCxWebpackPluginConfig(),\n        ...this._getZipPluginConfig(),\n      ],\n      devtool: this._getDevToolConfig(),\n      devServer: this._getDevServerConfig(),\n      stats: this._getStatsConfig(),\n      performance: this._getPerformanceConfig(),\n      optimization: {\n        minimize: true,\n        minimizer: this._getOptimizationMinimizerConfig(),\n        splitChunks: {\n          chunks: 'all',\n          name: this._getOptimizationSplitChunksNameConfig(),\n          cacheGroups: {\n            ...this._getOptimizationCacheGroupsConfig(),\n          }\n        }\n      },\n      output: this._getOutputConfig()\n    };\n  }\n\n  /**\n   * The default output path: dist/{name}\n   * \n   * @returns {string}\n   */\n  _getDefaultOutputPath() {\n    return path.resolve(process.cwd(), 'dist', this.config.name);\n  }\n\n  /**\n   * The output path to use.\n   * \n   * @returns {string}\n   */\n  _getOutputPath() {\n    return this.config.outputPath || this._getDefaultOutputPath();\n  }\n\n  /**\n   * The entry configuration.\n   * \n   * @returns {{}}\n   */\n  _getEntryConfig() {\n    return {\n      ...this._getJavaScriptModuleEntries(),\n      json: {\n        import: path.resolve(this.config.rootPath, 'design.js'),\n        filename: 'design.json'\n      },\n      design: this._evaluateEntryTemplate('design'),\n      preview: this._evaluateEntryTemplate('preview')\n    };\n  }\n\n  /**\n   * Get the entry configuration for a template.\n   * \n   * @param {string} name \n   * @returns {{}}\n   */\n  _evaluateEntryTemplate(name) {\n    let twigFilePath = path.resolve(this.config.rootPath, `${name}.twig`);\n    let hbsFilePath = path.resolve(this.config.rootPath, `${name}.hbs.twig`);\n    let isTwig = fs.existsSync(twigFilePath);\n    let extension = isTwig ? 'html' : 'hbs';\n    return {\n      import: isTwig ? twigFilePath : hbsFilePath,\n      filename: `${name}.${extension}`\n    };\n  }\n\n  /**\n   * Get the entry configurations for the Java Script modules.\n   * \n   * @returns {[{}]}\n   */\n  _getJavaScriptModuleEntries() {\n    let entries = {};\n    for (const [name, filePath] of Object.entries(this.config.modules)) {\n      entries[name] = {\n        import: path.resolve(filePath),\n        filename: 'modules/[name]-[contenthash].js',\n        runtime: Constant.BSI_CX_MODULE_RUNTIME_PATH\n      };\n    }\n    return entries;\n  }\n\n  /**\n   * Rules for Twig file handling.\n   * \n   * @returns {[{}]}\n   */\n  _getTwigRuleConfig() {\n    return [\n      {\n        test: /\\.twig$/i,\n        use: [\n          this._getTemplateLoader(),\n          'ref-loader',\n          {\n            loader: 'twing-loader',\n            options: {\n              environmentModulePath: '@bsi-cx/design-build/dist/twing-environment.js',\n              renderContext: {\n                properties: this.config.properties,\n                designBaseUrl: Constant.BSI_CX_DESIGN_BASE_URL\n              }\n            }\n          }\n        ]\n      }\n    ];\n  }\n\n  /**\n   * Rule for HTML and Handlebars file handling.\n   * \n   * @returns {[{}]}\n   */\n  _getHtmlAndHbsRuleConfig() {\n    return [\n      {\n        test: /\\.(html|hbs)$/i,\n        use: [\n          this._getTemplateLoader(),\n          'ref-loader',\n        ]\n      }\n    ];\n  }\n\n  /**\n   * Rules for LESS, SASS/SCSS and CSS file handling.\n   * \n   * @returns {[{}]}\n   */\n  _getStyleRulesConfig() {\n    return [\n      {\n        test: /\\.less$/i,\n        use: [\n          ...this._getCssLoaderChain(),\n          {\n            loader: 'less-loader',\n          }\n        ]\n      },\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          ...this._getCssLoaderChain(),\n          {\n            loader: 'sass-loader',\n          }\n        ]\n      },\n      {\n        test: /\\.css$/i,\n        use: [\n          ...this._getCssLoaderChain()\n        ]\n      }\n    ];\n  }\n\n  /**\n   * Get all file extensions that should be handled as static assets (e.g. images and fonts).\n   * \n   * @returns {[string]}\n   */\n  _getStaticAssetFileExtensions() {\n    return [\n      'png',\n      'apng',\n      'jpg',\n      'jpeg',\n      'webp',\n      'gif',\n      'bmp',\n      'tiff',\n      'raw',\n      'svg',\n      'eot',\n      'ttf',\n      'woff',\n      'woff2'\n    ];\n  }\n\n  /**\n   * Rule for static assets handling.\n   * \n   * @returns {[{}]}\n   */\n  _getStaticAssetsRuleConfig() {\n    let fileExtensions = this._getStaticAssetFileExtensions().join('|');\n    let testRegex = new RegExp(`\\.(${fileExtensions})$`, 'i');\n\n    return [\n      {\n        test: testRegex,\n        type: 'asset/resource',\n        generator: {\n          filename: 'static/[name]-[contenthash][ext]'\n        }\n      }\n    ];\n  }\n\n  /**\n   * Rule for static Java Script file handling.\n   * \n   * @returns {[{}]}\n   */\n  _getStaticJavaScriptFileRuleConfig() {\n    return [\n      {\n        resource: (file) => StaticJavaScriptCondition.test(this.config.rootPath, file),\n        type: 'asset/resource',\n        generator: {\n          filename: 'static/[name]-[contenthash][ext]'\n        }\n      }\n    ];\n  }\n\n  /**\n   * Rule for regular Java Script file handling.\n   * \n   * @returns {[{}]}\n   */\n  _getRegularJavaScriptFileRuleConfig() {\n    return [\n      {\n        test: /\\.m?js$/i,\n        exclude: /(node_modules|bower_components)/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env'],\n            plugins: ['@babel/plugin-transform-runtime'],\n            cacheDirectory: true\n          }\n        }\n      }\n    ];\n  }\n\n  /**\n   * @returns {string}\n   */\n  _getTemplateLoader() {\n    return '@bsi-cx/design-build/dist/template-loader';\n  }\n\n  /**\n   * @returns {[{}]}\n   */\n  _getCssLoaderChain() {\n    return [\n      {\n        loader: MiniCssExtractPlugin.loader,\n        options: {\n          publicPath: '../'\n        }\n      },\n      {\n        loader: 'css-loader'\n      },\n      {\n        loader: 'postcss-loader',\n        options: {\n          postcssOptions: {\n            plugins: [\n              'postcss-preset-env',\n              'cssnano'\n            ]\n          }\n        }\n      }\n    ];\n  }\n\n  /**\n   * Mini CSS extract plugin configuration.\n   * \n   * @returns {[MiniCssExtractPlugin]}\n   */\n  _getMiniCssExtractPluginConfig() {\n    return [\n      new MiniCssExtractPlugin({\n        filename: 'static/styles-[contenthash].css',\n      })\n    ];\n  }\n\n  /**\n   * Copy plugin configuration.\n   * \n   * @returns {[CopyPlugin]}\n   */\n  _getCopyPluginConfig() {\n    return [\n      new CopyPlugin({\n        patterns: [\n          {\n            from: 'assets/**/*',\n            globOptions: {\n              dot: true,\n              ignore: ['**/.gitkeep', '**/.gitignore']\n            },\n            noErrorOnMissing: true,\n            info: {\n              minimized: true\n            },\n          },\n          ...this.config.additionalFilesToCopy\n        ]\n      })\n    ];\n  }\n\n  /**\n   * BSI CX Webpack plugin.\n   * \n   * @returns {[BsiCxWebpackPlugin]}\n   */\n  _getBsiCxWebpackPluginConfig() {\n    return [\n      new BsiCxWebpackPlugin()\n    ];\n  }\n\n  /**\n   * Webpack ZIP plugin configuration.\n   * \n   * @returns {[ZipPlugin|BsiCxWebpackZipHashPlugin]}\n   */\n  _getZipPluginConfig() {\n    let plugins = [\n      new ZipPlugin({\n        filename: getZipArchiveName(this.config.name, this.config.version),\n        exclude: [/\\.map$/]\n      })\n    ];\n\n    if (this.config.sourceMapEnabled) {\n      plugins.push(\n        new ZipPlugin({\n          filename: getZipArchiveName(this.config.name, this.config.version, 'dev'),\n        })\n      );\n    }\n\n    plugins.push(\n      new BsiCxWebpackZipHashPlugin(this.config.name, this.config.version, this.config.hashZipFiles)\n    );\n\n    return plugins;\n  }\n\n  /**\n   * The dev tool configuration.\n   * \n   * @returns {string|boolean}\n   */\n  _getDevToolConfig() {\n    return this.config.sourceMapEnabled ? 'source-map' : false;\n  }\n\n  /**\n   * Development server configuration.\n   * \n   * @returns {{}}\n   */\n  _getDevServerConfig() {\n    let outputPath = this._getOutputPath();\n    let contentBase = outputPath === this._getDefaultOutputPath() ? path.resolve(outputPath, '..') : process.cwd();\n    let zipRegEx = /\\.zip$/i;\n\n    return {\n      port: this.config.devServerPort,\n      contentBase: contentBase,\n      publicPath: '/',\n      compress: true,\n      writeToDisk: filePath => zipRegEx.test(filePath),\n      inline: false\n    };\n  }\n\n  /**\n   * The stats configuration.\n   * \n   * @returns {{}}\n   */\n  _getStatsConfig() {\n    return {\n      children: false,\n      errorDetails: true,\n    };\n  }\n\n  /**\n   * The performance configuration.\n   * \n   * @returns {{}}\n   */\n  _getPerformanceConfig() {\n    let excludedAssets = [\n      'design.json',\n    ];\n    let excludedExtensions = /\\.(map|zip|html|hbs)$/;\n\n    return {\n      assetFilter: (assetFilename) => !excludedAssets.includes(assetFilename) && !excludedExtensions.test(assetFilename),\n      hints: 'warning'\n    };\n  }\n\n  /**\n   * The minimizer configuration.\n   * \n   * @returns {[TerserPlugin]}\n   */\n  _getOptimizationMinimizerConfig() {\n    return [\n      new TerserPlugin({\n        extractComments: false\n      })\n    ];\n  }\n\n  /**\n   * The split chunks name configuration.\n   * \n   * @returns {function}\n   */\n  _getOptimizationSplitChunksNameConfig() {\n    return (module, _, cacheGroupKey) => {\n      return cacheGroupKey !== 'vendors' ? false : (module.rawRequest || false);\n    };\n  }\n\n  /**\n   * The chache groups configuration.\n   * \n   * @returns {{}}\n   */\n  _getOptimizationCacheGroupsConfig() {\n    return {\n      vendors: {\n        test: /[\\\\/]node_modules[\\\\/]/,\n        priority: 10,\n        reuseExistingChunk: true,\n        filename: 'vendors/[name]-[chunkhash].js'\n      },\n      styles: {\n        name: 'styles',\n        type: 'css/mini-extract',\n        chunks: 'all',\n        priority: 20,\n        enforce: true,\n      }\n    };\n  }\n\n  /**\n   * The output configuration.\n   * \n   * @returns {{}}\n   */\n  _getOutputConfig() {\n    return {\n      path: this._getOutputPath(),\n      publicPath: `${Constant.BSI_CX_DESIGN_BASE_URL}/`,\n      clean: true,\n      library: {\n        type: 'var',\n        name: '[name]'\n      }\n    };\n  }\n\n  /**\n   * Build the configuration for webpack from {@link BuildConfig} objects.\n   * \n   * @param  {...BuildConfig} configs \n   */\n  static fromConfigs(...configs) {\n    let devServerPort = undefined;\n\n    return configs\n      .map(config => config.validate())\n      .map(config => new WebpackConfigBuilder(config))\n      .map(config => config.build())\n      .map((config, index) => {\n        if (index === 0) {\n          devServerPort = config.devServer.port;\n        } else if (config.devServer.port === devServerPort) {\n          delete config.devServer;\n        }\n        return config;\n      });\n  }\n}\n","import BuildConfig from './src/build-config';\nimport WebpackConfigBuilder from './src/webpack-config-builder';\nimport BsiCxWebpackPlugin from './src/bsi-cx-webpack-plugin';\nimport BsiCxWebpackZipHashPlugin from './src/bsi-cx-webpack-zip-hash-plugin';\n\nexport {\n  BuildConfig,\n  WebpackConfigBuilder,\n  BsiCxWebpackPlugin,\n  BsiCxWebpackZipHashPlugin\n};\n"],"names":[],"sourceRoot":""}